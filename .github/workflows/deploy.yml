name: Build and deploy

on:
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install SpatiaLite and libgeos
      run: sudo apt-get install spatialite-bin libsqlite3-mod-spatialite
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
    - name: Download shapefile
      run: wget --quiet https://static.simonwillison.net/static/2023/Core_Based_Statistical_Areas.zip
    - name: Build core.db
      run: |
        shapefile-to-sqlite core.db Core_Based_Statistical_Areas.zip \
          --table Core_Based_Statistical_Areas \
          --spatial-index
    - name: Set up Cloud Run
      uses: google-github-actions/setup-gcloud@v0
      with:
        version: '318.0.0'
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
    - name: Deploy to Cloud Run
      env:
        SIMON_HASH: ${{ secrets.SIMON_HASH }}
      run: |-
        gcloud config set run/region us-central1
        gcloud config set project datasette-222320
        datasette publish cloudrun core.db \
        --spatialite \
        --metadata=metadata.yml \
        --service=cbsa \
        --install=datasette-leaflet-geojson \
        --install=datasette-graphql \
        --install=datasette-block-robots \
        --install=datasette-geojson-map \
        --install=datasette-auth-passwords \
        --extra-options="--setting default_page_size 10" \
        --plugin-secret datasette-auth-passwords simon_password_hash "$SIMON_HASH"
